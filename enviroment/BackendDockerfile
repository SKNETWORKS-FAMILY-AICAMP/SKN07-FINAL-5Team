FROM python:3.10-slim-bullseye


# ARG : 빌드 시 사용하는 변수를 정의합니다.
# RUN : 빌드 명령어를 실행합니다.
# USER_ID, GROUP_ID을  1000으로 설정한 이유는 
# 도커를 실행하는 USER와 컨테이너 USER의 환경설정을 똑같이 하기위함입니다.
# 같이 설정 안할 시 권한 문제로 파일이 수정이 안된다.
# 아이디 번호 : echo $(id -u) 
# 그룹 번호 : echo $(id -g)
ARG USER_ID=1000
ARG GROUP_ID=1000

# 그룹추가, 유저생성
RUN addgroup --gid ${GROUP_ID} encore && \
    adduser --uid ${USER_ID} --gid ${GROUP_ID} --disabled-password --gecos "" encore

# WORKDIR : 작업 디렉터리를 변경합니다.
WORKDIR /home/encore/

# 파이썬 개발 패키지 및 c 컴파일러 설치
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3-dev \
    gcc \
    linux-headers-amd64 \
 && rm -rf /var/lib/apt/lists/*

# USER : 사용자 및 그룹 ID를 설정합니다.
# 컨테이너 계정과 컴퓨터 계정을 일치하기 위해 encore로 설정하였습니다.
USER encore

# 사용자의 실행파일 디렉토리를 생성하고 PATH에 설정
ENV PATH=/home/encore/.local/bin:$PATH
ENV PYTHONPATH="${PYTHONPATH}:/home/encore/backend"

# backend 폴더, backend_requirement.txt 파일의 유저와 그룹을 encore로 설정
COPY --chown=encore:encore backend/ ./backend/
COPY --chown=encore:encore ./backend_requirement.txt /home/encore/

# 패키지 설치
RUN pip install --upgrade pip setuptools wheel
RUN pip install --no-cache-dir --upgrade -r backend_requirement.txt

# 애플리케이션이 수신 대기하는 포트를 설정
EXPOSE 9999

# HEALTHCHECK 설정: 30초 간격, 5초 타임아웃, 5초 시작 지연, 3번 재시도
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:9999/health || exit 1


# 컨테이너 시작 시 아래 명령어가 실행됨
# 배포할 때  추가할 옵션 : "--proxy-headers"
CMD ["uvicorn", "backend.main:app", "--host", "0.0.0.0", "--port", "9999", "--reload"]